# syntax=docker/dockerfile:1
## We specify the base image we need for our
## go application
# Stage 1
FROM golang:1.18.6-alpine3.16 AS builder

# create build folder
RUN mkdir /build

# copy all files to dependencies and go files /server
WORKDIR /build
COPY /server/go.mod .
COPY /server/go.sum .
RUN go mod download
COPY /server/*.go .

# build binary in /server
# CGO_ENABLED=0 for cross compiling with C and GO
# CGO_ENABLED=1 will fail with standard_init_linux.go:228: exec user process caused: no such file or directory
RUN CGO_ENABLED=0 go build -o foodserver .

# Stage 2
# create deployment folder and sub folders
RUN mkdir /dist
RUN mkdir /config

# Start from root
FROM scratch

# copy binary from stage 1 builddocker 
COPY --from=builder /build/foodserver /dist/foodserver

# copy .env file
WORKDIR /config
COPY /config/* .

# Expose necessary port
EXPOSE 5000

## Our start command which kicks off
## our newly created binary executable
ENTRYPOINT ["/dist/foodserver"]